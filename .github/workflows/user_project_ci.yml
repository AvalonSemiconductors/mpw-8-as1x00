name: CI

on: [ push, workflow_dispatch ]
permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  gds:
    runs-on: ubuntu-latest
    env:
      OPENLANE_ROOT: /home/runner/openlane
      PDK_ROOT:      /home/runner/pdk
      PDK:           sky130B
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Install PDK
        run: make setup
      
      - name: Harden using Openlane
        run: |
          make uncompress
          rm -f gds/wrapped_tms1x00.gds
          rm -f gds/user_project_wrapper.gds
          make wrapped_tms1x00
          make user_project_wrapper
      
      - name: Tarball GDS outputs
        run: |
          tar -cf /tmp/gds.tar -C ./gds .
      
      - name: Upload GDS Tarball
        uses: actions/upload-artifact@v3
        with:
          name: gds-tarball
          path: /tmp/gds.tar
      
      - name: upload failure logs
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: error
          path: |
            /home/runner/work/mpw-8-as1x00/mpw-8-as1x00/precheck_results/*

  precheck:
    needs: gds
    runs-on: ubuntu-latest
    env:
      OPENLANE_ROOT: /home/runner/openlane
      PDK_ROOT:      /home/runner/pdk
      PDK:           sky130B
    steps:
      - name: Download GDS Tarball
        uses: actions/download-artifact@v2
        with:
          name: gds-tarball
          path: /tmp
          
      - name: Unpack GDS Tarball
        run: |
          rm -rf gds
          mkdir gds
          tar -xf /tmp/gds.tar -C gds .
          
      - name: Install PDK
        run: make setup
        
      - name: run precheck
        run: |
          make precheck
          make run-precheck
          
          cnt=$(grep -c "All Checks Passed" precheck_results/*/logs/precheck.log)
          if ! [[ $cnt ]]; then cnt=0; fi
          if [[ $cnt -eq 1 ]]; then exit 0; fi
          exit 2
